version: '3.4'

services:
  restaurant-service:
    ports:
     - "8096:8086"
    build:
      dockerfile: Dockerfile
      target: restaurant-micro-service
    environment:
      - SOLR_HOST=solr
    depends_on:
      - solr
  useranduserreview-service:
    ports:
      - "8095:8085"
    build:
      dockerfile: Dockerfile
      target: user-user-review-micro-service
    environment:
      - POSTGRES_USER_URL=jdbc:postgresql://postgres-useranduserreview:5432/geotaste-useranduserreview
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - KAFKA_BROKER_URL=kafka
      - RESTAURANT_SERVICE_URL=http://restaurant-service:8086/api/v1/restaurants
    depends_on:
      postgres-geotaste-logger:
        condition: service_healthy
      restaurant-service:
        condition: service_started
      geotaste-logger:
        condition: service_started
      kafka:
        condition: service_started

  geotaste-logger:
    ports:
      - "8091:8081"
    build:
      dockerfile: Dockerfile
      target: geotaste-logger-service
    environment:
      - POSTGRES_LOGGER_URL=jdbc:postgresql://postgres-geotaste-logger:5432/geotaste-logger
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - KAFKA_BROKER_URL=kafka
    depends_on:
      postgres-geotaste-logger:
          condition: service_healthy
      kafka:
        condition: service_started

  zookeeper:
    image: zookeeper:3.6
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "myTopic1:1:1,myTopic2:1:1"
    depends_on:
      - zookeeper

  solr:
    image: solr:latest
    container_name: restaurant_geo
    ports:
      - "8983:8983"
    volumes:
      - ./data:/var/solr
    command:
      - solr-precreate
      - geotaste_restaurant

  postgres-geotaste-logger:
    image: postgres:latest
    ports:
      - "5001:5432"
    volumes:
      - ./dataGeoTaste-Logger:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=geotaste-logger
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres-useranduserreview:
    image: postgres:latest
    ports:
      - "5002:5432"
    volumes:
      - ./dataUserAndUserReviewService:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=geotaste-useranduserreview
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5